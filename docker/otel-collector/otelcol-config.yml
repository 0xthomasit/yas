receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:5555
      http:
        endpoint: 0.0.0.0:6666
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

connectors:
  servicegraph:
    latency_histogram_buckets: [100ms, 250ms, 1s, 5s, 10s]
    dimensions:
      - dimension-1
      - dimension-2
    store:
      ttl: 2s
      max_items: 20

exporters:
  debug:
    verbosity: basic
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    resource_to_telemetry_conversion:
      enabled: true   # Convert resource attributes to metric labels
  otlp:
    endpoint: "tempo:4317"
    tls:
      insecure: true
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 10s
      max_elapsed_time: 0s   # unlimited
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 4096
  # New: use OTLP/HTTP to Loki instead of Loki
  otlphttp/loki:
    endpoint: http://loki:3100/otlp   # don't add /v1/logs; the exporter appends it
    tls:
      insecure: true  # for http (local). Remove if https.
processors:
  batch:
    # timeout: 1s
    # send_batch_size: 1024
  transform:
    metric_statements:
      - context: metric
        statements:
          # FIXME: remove this when this is issue is resolved: https://github.com/open-telemetry/opentelemetry-java/issues/4834
          - set(description, "") where name == "queueSize"
          # FIXME: remove this when the following 2 issues are resolved
          # Java: https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/9478
          # Go: https://github.com/open-telemetry/opentelemetry-go-contrib/issues/4301
          - set(description, "") where name == "rpc.server.duration"
      # - context: datapoint
      #   statements:
      #   - set(attributes["namespace"], resource.attributes["service.namspace"])
      #   - set(attributes["service_name"], resource.attributes["service.name"])
      #   - set(attributes["pod"], resource.attributes["container.id"])
  resource/loki:
    attributes:
      - action: insert
        key: loki.resource.labels
        value: service.name, service.namespace
      # - action: insert
      #   key: loki.format
      #   value: logfmt
  # attributes:
  #   actions:

# connectors:
#   spanmetrics:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp, servicegraph]
    metrics:
      receivers: [otlp, servicegraph]
      processors: [transform, batch]
      exporters: [prometheusremotewrite]
    logs:
      receivers: [otlp]
      processors: [resource/loki, batch]
      exporters: [otlphttp/loki]
  telemetry:
    metrics:
      readers:
        - pull:
            exporter:
              prometheus:
                host: collector
                port: 8889
#      address: collector:8888 # Deprecated, use pull reader instead.
      level: detailed
    logs:
      level: INFO